# Easier navigation
alias ..="cd .."
alias ...="cd ../.."

# Finder shortcuts
alias d="cd ~/Dropbox"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias doc="cd ~/Documents"
alias ss="cd ~/Sites"

# Better GitHub integration
alias git="hub"

# Git shortcuts
alias g="git"
alias h="history"

# Composer CLI
alias dump="composer dump-autoload"

# List all files in long format, including dot files
alias l="ls -Glah"

# Enable aliases to be sudoâ€™ed
alias sudo="sudo "

# Load the iphone simulator
alias simulator="open /Applications/Xcode.app/Contents/Developer/Applications/iOS\ Simulator.app"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Get week number
alias week="date +%V"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Create a new directory and enter it
function mkd() {
	mkdir -p "${@}" && cd "${@}";
}

# Start a PHP server from a directory, optionally specifying the port
# (Requires PHP 5.4.0+.)
function serve() {
	local port="${1:-4000}";
	sleep 1 && open "http://localhost:${port}/" & php -S "localhost:${port}";
}

# `a` with no arguments opens the current directory in Atom, otherwise
# opens the given location
function a() {
	if [ $# -eq 0 ]; then
		atom .;
	else
		atom "$@";
	fi
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi
}

# `o` with no arguments opens current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi
}

# Easy file sharing from the command line
# https://github.com/dutchcoders/transfer.sh/
function transfer() {
	# write to output to tmpfile because of progress bar
	tmpfile=$( mktemp -t transferXXX )
	curl --progress-bar --upload-file $1 https://transfer.sh/$(basename $1) >> $tmpfile;
	cat $tmpfile;
	rm -f $tmpfile;
}
